# Generated by Django 3.2.7 on 2021-10-01 19:23

import django.core.validators
from django.db import migrations, models
import kutub.fields


class Migration(migrations.Migration):

    dependencies = [
        ('kutub', '0030_manuscript_iiif_manifest_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', kutub.fields.DescriptionField(blank=True, default='', help_text='The tag for this language. This is generated from the other fields and should not be edited manually.', validators=[django.core.validators.RegexValidator('^[ -\ud7ff\t\n\r\ue000-ÔøΩêÄÄ-\U0010ffff]*$', 'Only valid XML characters allowed.')])),
                ('language_subtag', kutub.fields.DescriptionField(blank=True, default='', help_text='The IANA-registered code for the language. Written in lower case.', validators=[django.core.validators.RegexValidator('^[a-z]+$', code='language_subtag', message='The language code must be written in lower case.')])),
                ('extlang', kutub.fields.DescriptionField(blank=True, default='', help_text='The extended language subtag.', validators=[django.core.validators.RegexValidator('^[a-z]*$', code='invalid_extlang', message='The extended language subtag must be written in lower case.')])),
                ('script_tag', kutub.fields.DescriptionField(blank=True, default='', help_text='The script subtag. Omit unless making a necessary distinction.', validators=[django.core.validators.RegexValidator('[A-Z][a-z]{3}$', code='invalid_script', message='The script is four characters long with the first character uppercase.')])),
                ('region_tag', kutub.fields.DescriptionField(blank=True, default='', help_text='The two-letter ISO 3166 country code or the 3-digit UN M.49 region code.', validators=[django.core.validators.RegexValidator('^[A-Z]{2}|\\d{3}$', code='invalid_region', message='Not a valid two-letter ISO 3166 country code or 3-digit UN M.49 region code.')])),
                ('description', kutub.fields.DescriptionField(blank=True, default='', help_text='A description of this language.', validators=[django.core.validators.RegexValidator('^[ -\ud7ff\t\n\r\ue000-ÔøΩêÄÄ-\U0010ffff]*$', 'Only valid XML characters allowed.')])),
            ],
        ),
    ]
